# Generated by Django 3.1.4 on 2020-12-17 13:34

import challonge.enums
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import extensions.ssbu.formats
import extensions.ssbu.intervals
import extensions.ssbu.models
import extensions.ssbu.regions
import extensions.ssbu.stages
import hero.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('scheduler', '0001_initial'),
        ('hero', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DoublesMatch',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('in_dms', models.BooleanField()),
                ('team_1_score', models.SmallIntegerField(default=0)),
                ('team_2_score', models.SmallIntegerField(default=0)),
                ('current_game', models.SmallIntegerField(default=1)),
                ('last_game_won_by', models.SmallIntegerField(null=True)),
                ('wins_required', models.SmallIntegerField(default=2)),
                ('channel', hero.fields.TextChannelField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.TextChannel')),
                ('guild', hero.fields.GuildField(on_delete=django.db.models.deletion.CASCADE, to='hero.Guild')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'default_manager_name': 'custom_default_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='GuildPlayer',
            fields=[
                ('member', hero.fields.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='hero.member')),
                ('guild_elo', models.IntegerField(db_index=True, default=1000)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'default_manager_name': 'custom_default_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ranked', models.BooleanField()),
                ('in_dms', models.BooleanField()),
                ('player_1_score', models.SmallIntegerField(default=0)),
                ('player_2_score', models.SmallIntegerField(default=0)),
                ('current_game', models.SmallIntegerField(default=1)),
                ('last_game_won_by', models.SmallIntegerField(blank=True, null=True)),
                ('wins_required', models.SmallIntegerField(default=2)),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('channel', hero.fields.TextChannelField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.TextChannel', unique=True)),
                ('guild', hero.fields.GuildField(on_delete=django.db.models.deletion.CASCADE, to='hero.Guild')),
                ('management_message', hero.fields.MessageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Message')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'default_manager_name': 'custom_default_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MatchCategory',
            fields=[
                ('category', hero.fields.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='hero.categorychannel')),
                ('number', models.SmallIntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'default_manager_name': 'custom_default_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MatchmakingSetup',
            fields=[
                ('channel', hero.fields.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='hero.textchannel')),
                ('name', hero.fields.CharField(max_length=64)),
                ('ranked', models.BooleanField(default=False)),
                ('available_role', hero.fields.RoleField(on_delete=django.db.models.deletion.CASCADE, to='hero.Role')),
                ('looking_role', hero.fields.RoleField(on_delete=django.db.models.deletion.CASCADE, to='hero.Role')),
                ('matchmaking_message', hero.fields.MessageField(on_delete=django.db.models.deletion.CASCADE, to='hero.Message')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'default_manager_name': 'custom_default_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challonge_id', models.IntegerField(db_index=True)),
                ('starting_elo', models.IntegerField()),
                ('starting_guild_elo', models.IntegerField()),
                ('match_count', models.SmallIntegerField(default=0)),
                ('forfeit_count', models.SmallIntegerField(default=0)),
                ('current_match', hero.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.doublesmatch')),
                ('member_1', hero.fields.MemberField(on_delete=django.db.models.deletion.CASCADE, to='hero.Member')),
                ('member_2', hero.fields.MemberField(on_delete=django.db.models.deletion.CASCADE, to='hero.Member')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'default_manager_name': 'custom_default_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('user', hero.fields.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='hero.user')),
                ('challonge_username', hero.fields.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('challonge_user_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('elo', models.IntegerField(db_index=True, default=1000)),
                ('region', extensions.ssbu.regions.RegionField(blank=True, db_index=True, max_length=2, null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'default_manager_name': 'custom_default_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Ruleset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', hero.fields.CharField(max_length=128)),
                ('starter_stages', hero.fields.SeparatedValuesField(default=extensions.ssbu.stages.Stage.get_default_starters, max_length=64)),
                ('counterpick_stages', hero.fields.SeparatedValuesField(default=extensions.ssbu.stages.Stage.get_default_counterpicks, max_length=64)),
                ('counterpick_bans', models.SmallIntegerField(default=2)),
                ('dsr', models.BooleanField(default=True)),
                ('guild', hero.fields.GuildField(on_delete=django.db.models.deletion.CASCADE, to='hero.Guild')),
            ],
            options={
                'unique_together': {('name', 'guild')},
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='TournamentSeries',
            fields=[
                ('key_prefix', hero.fields.CharField(max_length=128, primary_key=True, serialize=False)),
                ('name', hero.fields.CharField(max_length=128)),
                ('next_iteration', models.IntegerField(default=1)),
                ('ranked', models.BooleanField()),
                ('introduction', models.TextField(max_length=2048)),
                ('default_participants_limit', models.IntegerField(default=512)),
                ('last_start_time', models.DateTimeField(blank=True, null=True)),
                ('delay_start', models.SmallIntegerField(blank=True, null=True)),
                ('interval', extensions.ssbu.intervals.IntervalField(blank=True, max_length=32, null=True)),
                ('doubles', models.BooleanField(db_index=True)),
                ('format', extensions.ssbu.formats.FormatField(default=challonge.enums.TournamentType['double_elimination'], max_length=32)),
                ('affects_elo', models.BooleanField(default=True)),
                ('allow_matches_in_dms', models.BooleanField()),
                ('cancelled', models.BooleanField(default=False)),
                ('admins', hero.fields.ManyToManyField(blank=True, null=True, to='ssbu.Player')),
                ('announcements_channel', hero.fields.TextChannelField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.TextChannel')),
                ('checkin_emoji', hero.fields.EmojiField(default=extensions.ssbu.models.get_default_emoji, on_delete=django.db.models.deletion.SET_DEFAULT, to='hero.Emoji')),
                ('guild', hero.fields.GuildField(on_delete=django.db.models.deletion.CASCADE, to='hero.Guild')),
                ('organizer_role', hero.fields.RoleField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Role')),
                ('participant_role', hero.fields.RoleField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Role', unique=True)),
                ('ruleset', hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.ruleset')),
                ('signup_emoji', hero.fields.EmojiField(default=extensions.ssbu.models.get_default_emoji, on_delete=django.db.models.deletion.SET_DEFAULT, to='hero.Emoji')),
                ('streamer_role', hero.fields.RoleField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Role')),
                ('talk_channel', hero.fields.TextChannelField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.TextChannel')),
            ],
            options={
                'unique_together': {('name', 'guild')},
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('key', hero.fields.CharField(max_length=128, unique=True)),
                ('name', hero.fields.CharField(max_length=128)),
                ('ranked', models.BooleanField()),
                ('doubles', models.BooleanField(db_index=True)),
                ('format', extensions.ssbu.formats.FormatField(default=extensions.ssbu.formats.Formats['double_elimination'], max_length=32)),
                ('allow_matches_in_dms', models.BooleanField()),
                ('start_time', models.DateTimeField(db_index=True)),
                ('delay_start', models.SmallIntegerField(blank=True, null=True)),
                ('ended', models.BooleanField(db_index=True, default=False)),
                ('announcements_channel', hero.fields.TextChannelField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.TextChannel')),
                ('check_reactions_task', hero.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='scheduler.scheduledtask')),
                ('checkin_emoji', hero.fields.EmojiField(default=extensions.ssbu.models.get_default_emoji, on_delete=django.db.models.deletion.SET_DEFAULT, to='hero.Emoji')),
                ('checkin_message', hero.fields.MessageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Message', unique=True)),
                ('guild', hero.fields.GuildField(on_delete=django.db.models.deletion.CASCADE, to='hero.Guild')),
                ('organizer_role', hero.fields.RoleField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Role')),
                ('participant_role', hero.fields.RoleField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Role', unique=True)),
                ('ruleset', hero.fields.ForeignKey(on_delete=django.db.models.deletion.SET_DEFAULT, to='ssbu.ruleset')),
                ('series', hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.tournamentseries')),
                ('signup_emoji', hero.fields.EmojiField(default=extensions.ssbu.models.get_default_emoji, on_delete=django.db.models.deletion.SET_DEFAULT, to='hero.Emoji')),
                ('signup_message', hero.fields.MessageField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Message', unique=True)),
                ('start_checkin_task', hero.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='scheduler.scheduledtask')),
                ('start_task', hero.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='scheduler.scheduledtask')),
                ('streamer_role', hero.fields.RoleField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Role')),
                ('talk_channel', hero.fields.TextChannelField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.TextChannel')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'default_manager_name': 'custom_default_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_name', hero.fields.CharField(max_length=64, null=True)),
                ('elo', models.IntegerField(db_index=True, default=1000)),
                ('current_participant_team', hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.participantteam')),
                ('current_tournament', hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.tournament')),
                ('member_1', hero.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssbu.player')),
                ('member_2', hero.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssbu.player')),
            ],
            options={
                'unique_together': {('member_1', 'member_2')},
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SsbuSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challonge_username', hero.fields.CharField(max_length=64)),
                ('challonge_api_key', hero.fields.CharField(max_length=128)),
                ('namespace', hero.fields.NamespaceField(on_delete=django.db.models.deletion.CASCADE, to='hero.coresettings')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='participantteam',
            name='tournament',
            field=hero.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssbu.tournament'),
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('member', hero.fields.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='hero.member')),
                ('challonge_id', models.IntegerField(db_index=True)),
                ('starting_elo', models.IntegerField()),
                ('starting_guild_elo', models.IntegerField()),
                ('match_count', models.SmallIntegerField(default=0)),
                ('forfeit_count', models.SmallIntegerField(default=0)),
                ('current_match', hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.match')),
                ('tournament', hero.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssbu.tournament')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'default_manager_name': 'custom_default_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MatchSearch',
            fields=[
                ('message', hero.fields.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='hero.message')),
                ('looking', hero.fields.MemberField(on_delete=django.db.models.deletion.CASCADE, to='hero.Member')),
                ('setup', hero.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssbu.matchmakingsetup')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'default_manager_name': 'custom_default_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MatchOffer',
            fields=[
                ('message', hero.fields.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='hero.message')),
                ('offered_to', hero.fields.MemberField(on_delete=django.db.models.deletion.CASCADE, to='hero.Member')),
                ('offering', hero.fields.MemberField(on_delete=django.db.models.deletion.CASCADE, to='hero.Member')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'default_manager_name': 'custom_default_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='matchmakingsetup',
            name='ruleset',
            field=hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.ruleset'),
        ),
        migrations.AddField(
            model_name='match',
            name='player_1',
            field=hero.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssbu.player'),
        ),
        migrations.AddField(
            model_name='match',
            name='player_2',
            field=hero.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssbu.player'),
        ),
        migrations.AddField(
            model_name='match',
            name='setup',
            field=hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.matchmakingsetup'),
        ),
        migrations.AddField(
            model_name='match',
            name='spectating_message',
            field=hero.fields.MessageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Message'),
        ),
        migrations.AddField(
            model_name='match',
            name='tournament',
            field=hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ssbu.tournament'),
        ),
        migrations.AddField(
            model_name='match',
            name='voice_channel',
            field=hero.fields.VoiceChannelField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.VoiceChannel'),
        ),
        migrations.AddField(
            model_name='match',
            name='winner',
            field=hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ssbu.player'),
        ),
        migrations.CreateModel(
            name='GuildSetup',
            fields=[
                ('guild', hero.fields.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='hero.guild')),
                ('allow_matches_in_dms', models.BooleanField(default=False)),
                ('use_elo', models.BooleanField(default=True)),
                ('show_elo', models.BooleanField(default=True)),
                ('verified', models.BooleanField(default=False)),
                ('ingame_role', hero.fields.RoleField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Role')),
                ('main_series', hero.fields.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.tournamentseries')),
                ('player_1_blindpick_channel', hero.fields.TextChannelField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.TextChannel')),
                ('player_2_blindpick_channel', hero.fields.TextChannelField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.TextChannel')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'default_manager_name': 'custom_default_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.SmallIntegerField()),
                ('striked_stages', hero.fields.SeparatedValuesField(default=[], max_length=64)),
                ('suggested_stage', models.SmallIntegerField(blank=True, null=True)),
                ('suggestion_accepted', models.BooleanField(blank=True, null=True)),
                ('picked_stage', models.SmallIntegerField(blank=True, null=True)),
                ('first_to_strike', hero.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.participant')),
                ('guild', hero.fields.GuildField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Guild')),
                ('match', hero.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.match')),
                ('needs_confirmation_by', hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.participant')),
                ('striking_message', hero.fields.MessageField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Message')),
                ('suggested_by', hero.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.participant')),
                ('winner', hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.participant')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'default_manager_name': 'custom_default_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='doublesmatch',
            name='team_1',
            field=hero.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssbu.participantteam'),
        ),
        migrations.AddField(
            model_name='doublesmatch',
            name='team_2',
            field=hero.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssbu.participantteam'),
        ),
        migrations.AddField(
            model_name='doublesmatch',
            name='tournament',
            field=hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ssbu.tournament'),
        ),
        migrations.AddField(
            model_name='doublesmatch',
            name='winner',
            field=hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ssbu.participantteam'),
        ),
        migrations.CreateModel(
            name='DoublesGame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.SmallIntegerField()),
                ('striked_stages', hero.fields.SeparatedValuesField(default=[], max_length=64)),
                ('suggested_stage', models.SmallIntegerField(blank=True, null=True)),
                ('suggestion_accepted', models.BooleanField(blank=True, null=True)),
                ('picked_stage', models.SmallIntegerField(blank=True, null=True)),
                ('first_to_strike', hero.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.participantteam')),
                ('guild', hero.fields.GuildField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Guild')),
                ('match', hero.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.doublesmatch')),
                ('needs_confirmation_by', hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.participantteam')),
                ('striking_message', hero.fields.MessageField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hero.Message')),
                ('suggested_by', hero.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.participantteam')),
                ('winner', hero.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssbu.participantteam')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'default_manager_name': 'custom_default_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='GuildTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guild_elo', models.IntegerField(db_index=True, default=1000)),
                ('guild', hero.fields.GuildField(on_delete=django.db.models.deletion.CASCADE, to='hero.Guild')),
                ('team', hero.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssbu.team')),
            ],
            options={
                'unique_together': {('team', 'guild')},
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('custom_default_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
